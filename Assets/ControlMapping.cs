//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/ControlMapping.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ControlMapping: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ControlMapping()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ControlMapping"",
    ""maps"": [
        {
            ""name"": ""default"",
            ""id"": ""19997fb7-d0ab-4ad5-b41f-e15f41a3b85f"",
            ""actions"": [
                {
                    ""name"": ""GiveMoney"",
                    ""type"": ""Button"",
                    ""id"": ""768b6113-b5ae-473a-82f1-075f76f8894c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GiveMoreMoney"",
                    ""type"": ""Button"",
                    ""id"": ""6392f19f-9f49-4ac9-92a5-f4f24e2dba2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""612d4b00-6fe5-4911-a942-46161217185c"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GiveMoney"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""1a42b132-dc52-4a5e-9b35-6f4b397c6138"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GiveMoney"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""8442a43f-4060-4c5f-a963-00f2e972fd7f"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GiveMoney"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""e315f9a5-91cd-4842-a45b-498ffbc25191"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GiveMoreMoney"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""49912817-67b9-4293-bf87-c4e69462d642"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GiveMoreMoney"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""b950ad3d-dbd4-4c67-baa6-377f2d05c77c"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GiveMoreMoney"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // default
        m_default = asset.FindActionMap("default", throwIfNotFound: true);
        m_default_GiveMoney = m_default.FindAction("GiveMoney", throwIfNotFound: true);
        m_default_GiveMoreMoney = m_default.FindAction("GiveMoreMoney", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // default
    private readonly InputActionMap m_default;
    private List<IDefaultActions> m_DefaultActionsCallbackInterfaces = new List<IDefaultActions>();
    private readonly InputAction m_default_GiveMoney;
    private readonly InputAction m_default_GiveMoreMoney;
    public struct DefaultActions
    {
        private @ControlMapping m_Wrapper;
        public DefaultActions(@ControlMapping wrapper) { m_Wrapper = wrapper; }
        public InputAction @GiveMoney => m_Wrapper.m_default_GiveMoney;
        public InputAction @GiveMoreMoney => m_Wrapper.m_default_GiveMoreMoney;
        public InputActionMap Get() { return m_Wrapper.m_default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void AddCallbacks(IDefaultActions instance)
        {
            if (instance == null || m_Wrapper.m_DefaultActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Add(instance);
            @GiveMoney.started += instance.OnGiveMoney;
            @GiveMoney.performed += instance.OnGiveMoney;
            @GiveMoney.canceled += instance.OnGiveMoney;
            @GiveMoreMoney.started += instance.OnGiveMoreMoney;
            @GiveMoreMoney.performed += instance.OnGiveMoreMoney;
            @GiveMoreMoney.canceled += instance.OnGiveMoreMoney;
        }

        private void UnregisterCallbacks(IDefaultActions instance)
        {
            @GiveMoney.started -= instance.OnGiveMoney;
            @GiveMoney.performed -= instance.OnGiveMoney;
            @GiveMoney.canceled -= instance.OnGiveMoney;
            @GiveMoreMoney.started -= instance.OnGiveMoreMoney;
            @GiveMoreMoney.performed -= instance.OnGiveMoreMoney;
            @GiveMoreMoney.canceled -= instance.OnGiveMoreMoney;
        }

        public void RemoveCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDefaultActions instance)
        {
            foreach (var item in m_Wrapper.m_DefaultActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DefaultActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DefaultActions @default => new DefaultActions(this);
    public interface IDefaultActions
    {
        void OnGiveMoney(InputAction.CallbackContext context);
        void OnGiveMoreMoney(InputAction.CallbackContext context);
    }
}
